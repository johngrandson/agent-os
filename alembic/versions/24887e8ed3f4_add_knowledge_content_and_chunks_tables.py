"""add_knowledge_content_and_chunks_tables

Revision ID: 24887e8ed3f4
Revises: 986bab53fb5b
Create Date: 2025-09-22 17:36:25.923536

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "24887e8ed3f4"
down_revision: Union[str, None] = "986bab53fb5b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop workflows table (no longer needed)
    try:
        op.drop_table("workflows")
    except Exception:
        pass  # Table may not exist
    op.create_table(
        "knowledge_contents",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("agent_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("content_type", sa.String(length=50), nullable=False),
        sa.Column("status", sa.String(length=50), nullable=False),
        sa.Column("content_text", sa.Text(), nullable=True),
        sa.Column("file_path", sa.String(length=500), nullable=True),
        sa.Column("file_size", sa.Integer(), nullable=True),
        sa.Column("file_hash", sa.String(length=64), nullable=True),
        sa.Column("chunk_size", sa.Integer(), nullable=False),
        sa.Column("chunk_overlap", sa.Integer(), nullable=False),
        sa.Column("total_chunks", sa.Integer(), nullable=False),
        sa.Column(
            "content_metadata", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("access_count", sa.Integer(), nullable=False),
        sa.Column("last_accessed", sa.String(), nullable=True),
        sa.Column("created_at", sa.String(), nullable=False),
        sa.Column("updated_at", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_knowledge_contents_agent_id",
        "knowledge_contents",
        ["agent_id"],
        unique=False,
    )
    op.create_index(
        "ix_knowledge_contents_content_type",
        "knowledge_contents",
        ["content_type"],
        unique=False,
    )
    op.create_index(
        "ix_knowledge_contents_file_hash",
        "knowledge_contents",
        ["file_hash"],
        unique=False,
    )
    op.create_index(
        "ix_knowledge_contents_status", "knowledge_contents", ["status"], unique=False
    )
    op.create_table(
        "knowledge_chunks",
        sa.Column("id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("content_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("agent_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("chunk_text", sa.Text(), nullable=False),
        sa.Column("chunk_index", sa.Integer(), nullable=False),
        sa.Column("embedding", postgresql.ARRAY(sa.Float()), nullable=True),
        sa.Column(
            "chunk_metadata", postgresql.JSON(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("start_position", sa.Integer(), nullable=True),
        sa.Column("end_position", sa.Integer(), nullable=True),
        sa.Column("keywords", postgresql.JSON(astext_type=sa.Text()), nullable=True),
        sa.Column("summary", sa.Text(), nullable=True),
        sa.Column("created_at", sa.String(), nullable=False),
        sa.Column("updated_at", sa.String(), nullable=False),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
        ),
        sa.ForeignKeyConstraint(
            ["content_id"],
            ["knowledge_contents.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_knowledge_chunks_agent_id", "knowledge_chunks", ["agent_id"], unique=False
    )
    op.create_index(
        "ix_knowledge_chunks_chunk_index",
        "knowledge_chunks",
        ["chunk_index"],
        unique=False,
    )
    op.create_index(
        "ix_knowledge_chunks_content_chunk",
        "knowledge_chunks",
        ["content_id", "chunk_index"],
        unique=True,
    )
    op.create_index(
        "ix_knowledge_chunks_content_id",
        "knowledge_chunks",
        ["content_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_knowledge_chunks_content_id", table_name="knowledge_chunks")
    op.drop_index("ix_knowledge_chunks_content_chunk", table_name="knowledge_chunks")
    op.drop_index("ix_knowledge_chunks_chunk_index", table_name="knowledge_chunks")
    op.drop_index("ix_knowledge_chunks_agent_id", table_name="knowledge_chunks")
    op.drop_table("knowledge_chunks")
    op.drop_index("ix_knowledge_contents_status", table_name="knowledge_contents")
    op.drop_index("ix_knowledge_contents_file_hash", table_name="knowledge_contents")
    op.drop_index("ix_knowledge_contents_content_type", table_name="knowledge_contents")
    op.drop_index("ix_knowledge_contents_agent_id", table_name="knowledge_contents")
    op.drop_table("knowledge_contents")
    # Workflows table no longer needed - removed from downgrade
    # ### end Alembic commands ###
