"""add_clean_knowledge_tables

Revision ID: 2a73fe0d95ed
Revises: 986bab53fb5b
Create Date: 2025-09-22 19:11:32.418766

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import Vector

# revision identifiers, used by Alembic.
revision: str = '2a73fe0d95ed'
down_revision: Union[str, None] = '986bab53fb5b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent_memories',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('embedding', Vector(dim=1536), nullable=True),
    sa.Column('memory_type', sa.String(length=50), nullable=False),
    sa.Column('priority', sa.String(length=50), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('context_data', sa.JSON(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=False),
    sa.Column('last_accessed', sa.String(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('retention_days', sa.Integer(), nullable=True),
    sa.Column('expires_at', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_agent_memories_agent_id', 'agent_memories', ['agent_id'], unique=False)
    op.create_index('ix_agent_memories_embedding', 'agent_memories', ['embedding'], unique=False, postgresql_using='ivfflat')
    op.create_index('ix_agent_memories_memory_type', 'agent_memories', ['memory_type'], unique=False)
    op.create_index('ix_agent_memories_priority', 'agent_memories', ['priority'], unique=False)
    op.create_index('ix_agent_memories_source', 'agent_memories', ['source'], unique=False)
    op.create_table('knowledge_contexts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('context_type', sa.String(length=100), nullable=False),
    sa.Column('context_key', sa.String(length=255), nullable=False),
    sa.Column('context_value', sa.JSON(), nullable=False),
    sa.Column('embedding', Vector(dim=1536), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('expiry', sa.String(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('last_used', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_knowledge_contexts_agent_id', 'knowledge_contexts', ['agent_id'], unique=False)
    op.create_index('ix_knowledge_contexts_context_key', 'knowledge_contexts', ['context_key'], unique=False)
    op.create_index('ix_knowledge_contexts_context_type', 'knowledge_contexts', ['context_type'], unique=False)
    op.create_index('ix_knowledge_contexts_embedding', 'knowledge_contexts', ['embedding'], unique=False, postgresql_using='ivfflat')
    op.create_index('ix_knowledge_contexts_priority', 'knowledge_contexts', ['priority'], unique=False)
    op.create_table('knowledge_chunks',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('content_id', sa.UUID(), nullable=False),
    sa.Column('agent_id', sa.UUID(), nullable=False),
    sa.Column('chunk_text', sa.Text(), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('embedding', Vector(dim=1536), nullable=True),
    sa.Column('chunk_metadata', sa.JSON(), nullable=True),
    sa.Column('start_position', sa.Integer(), nullable=True),
    sa.Column('end_position', sa.Integer(), nullable=True),
    sa.Column('keywords', sa.JSON(), nullable=True),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['agent_id'], ['agents.id'], ),
    sa.ForeignKeyConstraint(['content_id'], ['knowledge_contents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_knowledge_chunks_agent_id', 'knowledge_chunks', ['agent_id'], unique=False)
    op.create_index('ix_knowledge_chunks_chunk_index', 'knowledge_chunks', ['chunk_index'], unique=False)
    op.create_index('ix_knowledge_chunks_content_chunk', 'knowledge_chunks', ['content_id', 'chunk_index'], unique=True)
    op.create_index('ix_knowledge_chunks_content_id', 'knowledge_chunks', ['content_id'], unique=False)
    op.create_index('ix_knowledge_chunks_embedding', 'knowledge_chunks', ['embedding'], unique=False, postgresql_using='ivfflat')
    op.drop_table('knowledge_vectors')
    op.add_column('knowledge_contents', sa.Column('status', sa.String(length=50), nullable=False))
    op.add_column('knowledge_contents', sa.Column('content_text', sa.Text(), nullable=True))
    op.add_column('knowledge_contents', sa.Column('file_path', sa.String(length=500), nullable=True))
    op.add_column('knowledge_contents', sa.Column('file_size', sa.Integer(), nullable=True))
    op.add_column('knowledge_contents', sa.Column('file_hash', sa.String(length=64), nullable=True))
    op.add_column('knowledge_contents', sa.Column('chunk_size', sa.Integer(), nullable=False))
    op.add_column('knowledge_contents', sa.Column('chunk_overlap', sa.Integer(), nullable=False))
    op.add_column('knowledge_contents', sa.Column('total_chunks', sa.Integer(), nullable=False))
    op.add_column('knowledge_contents', sa.Column('last_accessed', sa.String(), nullable=True))
    op.create_index('ix_knowledge_contents_agent_id', 'knowledge_contents', ['agent_id'], unique=False)
    op.create_index('ix_knowledge_contents_content_type', 'knowledge_contents', ['content_type'], unique=False)
    op.create_index('ix_knowledge_contents_file_hash', 'knowledge_contents', ['file_hash'], unique=False)
    op.create_index('ix_knowledge_contents_status', 'knowledge_contents', ['status'], unique=False)
    op.drop_constraint('knowledge_contents_agent_id_fkey', 'knowledge_contents', type_='foreignkey')
    op.create_foreign_key(None, 'knowledge_contents', 'agents', ['agent_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'knowledge_contents', type_='foreignkey')
    op.create_foreign_key('knowledge_contents_agent_id_fkey', 'knowledge_contents', 'agents', ['agent_id'], ['id'], ondelete='CASCADE')
    op.drop_index('ix_knowledge_contents_status', table_name='knowledge_contents')
    op.drop_index('ix_knowledge_contents_file_hash', table_name='knowledge_contents')
    op.drop_index('ix_knowledge_contents_content_type', table_name='knowledge_contents')
    op.drop_index('ix_knowledge_contents_agent_id', table_name='knowledge_contents')
    op.drop_column('knowledge_contents', 'last_accessed')
    op.drop_column('knowledge_contents', 'total_chunks')
    op.drop_column('knowledge_contents', 'chunk_overlap')
    op.drop_column('knowledge_contents', 'chunk_size')
    op.drop_column('knowledge_contents', 'file_hash')
    op.drop_column('knowledge_contents', 'file_size')
    op.drop_column('knowledge_contents', 'file_path')
    op.drop_column('knowledge_contents', 'content_text')
    op.drop_column('knowledge_contents', 'status')
    op.create_table('knowledge_vectors',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('content_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('chunk_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('embedding', Vector(dim=1536), autoincrement=False, nullable=True),
    sa.Column('content_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_id'], ['knowledge_contents.id'], name='knowledge_vectors_content_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='knowledge_vectors_pkey')
    )
    op.drop_index('ix_knowledge_chunks_embedding', table_name='knowledge_chunks', postgresql_using='ivfflat')
    op.drop_index('ix_knowledge_chunks_content_id', table_name='knowledge_chunks')
    op.drop_index('ix_knowledge_chunks_content_chunk', table_name='knowledge_chunks')
    op.drop_index('ix_knowledge_chunks_chunk_index', table_name='knowledge_chunks')
    op.drop_index('ix_knowledge_chunks_agent_id', table_name='knowledge_chunks')
    op.drop_table('knowledge_chunks')
    op.drop_index('ix_knowledge_contexts_priority', table_name='knowledge_contexts')
    op.drop_index('ix_knowledge_contexts_embedding', table_name='knowledge_contexts', postgresql_using='ivfflat')
    op.drop_index('ix_knowledge_contexts_context_type', table_name='knowledge_contexts')
    op.drop_index('ix_knowledge_contexts_context_key', table_name='knowledge_contexts')
    op.drop_index('ix_knowledge_contexts_agent_id', table_name='knowledge_contexts')
    op.drop_table('knowledge_contexts')
    op.drop_index('ix_agent_memories_source', table_name='agent_memories')
    op.drop_index('ix_agent_memories_priority', table_name='agent_memories')
    op.drop_index('ix_agent_memories_memory_type', table_name='agent_memories')
    op.drop_index('ix_agent_memories_embedding', table_name='agent_memories', postgresql_using='ivfflat')
    op.drop_index('ix_agent_memories_agent_id', table_name='agent_memories')
    op.drop_table('agent_memories')
    # ### end Alembic commands ###
