"""Add team and enhanced knowledge models

Revision ID: 90c3638fe282
Revises: 0ad7dc42f266
Create Date: 2025-09-21 23:12:28.893203

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "90c3638fe282"
down_revision: Union[str, None] = "0ad7dc42f266"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("integrations")
    op.drop_table("integration_logs")
    op.drop_table("webhook_deliveries")
    op.drop_table("agent_configs")
    op.drop_table("tasks")
    op.drop_table("webhook_endpoints")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "webhook_endpoints",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("integration_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "endpoint_path", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column(
            "webhook_secret", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "expected_content_type",
            sa.VARCHAR(length=100),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "event_mapping",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "transformation_rules",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column(
            "last_received", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
        sa.Column("total_received", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="webhook_endpoints_pkey"),
    )
    op.create_table(
        "tasks",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("title", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "task_type",
            postgresql.ENUM(
                "SIMPLE",
                "RESEARCH",
                "ANALYSIS",
                "COMMUNICATION",
                "AUTOMATION",
                "CUSTOMER_SERVICE",
                "SALES",
                "SUPPORT",
                name="tasktype",
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "status",
            postgresql.ENUM(
                "PENDING",
                "IN_PROGRESS",
                "COMPLETED",
                "FAILED",
                "CANCELLED",
                name="taskstatus",
            ),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "priority",
            postgresql.ENUM("LOW", "NORMAL", "HIGH", "URGENT", name="taskpriority"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("assigned_agent_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "assigned_by", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("parent_task_id", sa.UUID(), autoincrement=False, nullable=True),
        sa.Column(
            "parameters",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "expected_tools",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "results",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("error_message", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "started_at", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column(
            "completed_at", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column(
            "execution_time",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["assigned_agent_id"], ["agents.id"], name="tasks_assigned_agent_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["parent_task_id"], ["tasks.id"], name="tasks_parent_task_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="tasks_pkey"),
    )
    op.create_table(
        "agent_configs",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("agent_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "agent_api", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column("channel", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "encrypted_credentials",
            sa.VARCHAR(length=255),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "llm_provider", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column(
            "ai_model", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("ai_enabled", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("max_tokens", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "temperature",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.ForeignKeyConstraint(
            ["agent_id"],
            ["agents.id"],
            name="agent_configs_agent_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="agent_configs_pkey"),
        sa.UniqueConstraint(
            "agent_id",
            name="agent_configs_agent_id_key",
            postgresql_include=[],
            postgresql_nulls_not_distinct=False,
        ),
    )
    op.create_table(
        "webhook_deliveries",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "webhook_endpoint_id", sa.UUID(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "headers",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "payload",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "signature", sa.VARCHAR(length=255), autoincrement=False, nullable=True
        ),
        sa.Column("processed", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("success", sa.BOOLEAN(), autoincrement=False, nullable=True),
        sa.Column("error_message", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column("events_created", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "processing_time",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="webhook_deliveries_pkey"),
    )
    op.create_table(
        "integration_logs",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("integration_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("method", sa.VARCHAR(length=10), autoincrement=False, nullable=False),
        sa.Column("endpoint", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "request_data",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "request_headers",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("success", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("status_code", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "response_data",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "response_headers",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("error_message", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "execution_time",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "triggered_by", sa.VARCHAR(length=100), autoincrement=False, nullable=True
        ),
        sa.Column(
            "context",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="integration_logs_pkey"),
    )
    op.create_table(
        "integrations",
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("name", sa.VARCHAR(length=255), autoincrement=False, nullable=False),
        sa.Column("description", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "integration_type",
            sa.VARCHAR(length=100),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("base_url", sa.TEXT(), autoincrement=False, nullable=False),
        sa.Column(
            "auth_type", sa.VARCHAR(length=50), autoincrement=False, nullable=False
        ),
        sa.Column(
            "credentials",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "settings",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("is_active", sa.BOOLEAN(), autoincrement=False, nullable=False),
        sa.Column("timeout", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column(
            "rate_limit_config",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "retry_config",
            postgresql.JSON(astext_type=sa.Text()),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "last_health_check",
            postgresql.TIMESTAMP(),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column(
            "health_status", sa.VARCHAR(length=50), autoincrement=False, nullable=True
        ),
        sa.Column("health_message", sa.TEXT(), autoincrement=False, nullable=True),
        sa.Column(
            "created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.Column(
            "updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False
        ),
        sa.PrimaryKeyConstraint("id", name="integrations_pkey"),
    )
    # ### end Alembic commands ###
