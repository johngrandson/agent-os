{
  "workflow_id": "example-data-pipeline",
  "name": "Simple Data Processing Pipeline",
  "description": "A basic data processing workflow demonstrating sequential and parallel task execution",
  "global_timeout_seconds": 1800,
  "retry_policy": {
    "max_retries": 2,
    "backoff_seconds": 10
  },
  "tasks": [
    {
      "task_id": "data_ingestion",
      "task_type": "data_input",
      "agent_id": "data-ingestion-agent",
      "timeout_seconds": 300,
      "max_retries": 3,
      "data": {
        "source": "api_endpoint",
        "format": "json",
        "batch_size": 1000
      }
    },
    {
      "task_id": "data_validation",
      "task_type": "validation",
      "agent_id": "validation-agent",
      "depends_on": ["data_ingestion"],
      "timeout_seconds": 180,
      "data": {
        "schema_file": "data_schema.json",
        "strict_validation": true
      }
    },
    {
      "task_id": "data_transformation_a",
      "task_type": "transformation",
      "agent_id": "transform-agent-1",
      "depends_on": ["data_validation"],
      "timeout_seconds": 600,
      "data": {
        "operation": "clean_and_normalize",
        "output_format": "parquet"
      }
    },
    {
      "task_id": "data_transformation_b",
      "task_type": "transformation",
      "agent_id": "transform-agent-2",
      "depends_on": ["data_validation"],
      "timeout_seconds": 600,
      "data": {
        "operation": "feature_extraction",
        "output_format": "parquet"
      }
    },
    {
      "task_id": "data_aggregation",
      "task_type": "aggregation",
      "agent_id": "aggregation-agent",
      "depends_on": ["data_transformation_a", "data_transformation_b"],
      "timeout_seconds": 300,
      "data": {
        "merge_strategy": "inner_join",
        "output_location": "s3://processed-data/",
        "compression": "gzip"
      }
    },
    {
      "task_id": "quality_check",
      "task_type": "quality_assurance",
      "agent_id": "qa-agent",
      "depends_on": ["data_aggregation"],
      "timeout_seconds": 120,
      "data": {
        "checks": ["row_count", "null_values", "data_types"],
        "thresholds": {
          "min_rows": 100,
          "max_null_percentage": 5
        }
      }
    }
  ],
  "metadata": {
    "created_by": "orchestration_service",
    "environment": "development",
    "version": "1.0",
    "tags": ["data-pipeline", "example", "stage-4"]
  }
}
